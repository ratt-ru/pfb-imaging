inputs:
  fds:
    dtype: str
    required: true
    info:
      Path to fds produced by fastim worker
  outname:
    dtype: str
    required: true
    info:
      The name of the output.
      Fits images will be suffixed by band and time ID's.
      Mp4 movies will suffixed by .mp4
  animate-axis:
    dtype: str
    default: time
    choices:
      - time
      - freq
    info:
      Which axis to animate
  fps:
    dtype: int
    default: 8
    info:
      Frames per second
  min-frac:
    dtype: float
    default: 3.5
    info:
      vmin will be set as min-frac * median(rms)
  max-frac:
    dtype: float
    default: 3.5
    info:
      vmax will be set as min-frac * median(rms)
  cmap:
    dtype: str
    default: Grays
    info:
      Any valid matplotlib cmap
  text-colour:
    dtype: str
    default: 'cyan'
    info:
      Colour to render text on image
  log-directory:
    dtype: str
    required: true
    abbreviation: ldir
    info:
      Directory to write logs and performance reports to
  freq-bin:
    dtype: int
    default: 1
    info:
      How many freqs to bin into single frame
  time-bin:
    dtype: int
    default: 1
    info:
      How many times to bin into single frame
  freq-range:
    dtype: str
    info:
      Frequency range to consider.
      Specify as a string with colon delimiter eg. '1e9:1.1e9'
  time-range:
    dtype: str
    info:
      Time range to consider in mjds
      Specify as a string with colon delimiter eg. '5e7:5.5e7'
  overwrite:
    dtype: bool
    default: false
    info:
      Allow overwrite of output files with the same names.
  fits-mfs:
    dtype: bool
    default: true
    info:
      Output MFS fits files
  fits-cubes:
    dtype: bool
    default: false
    info:
      Output fits cubes
  movie-mfs:
    dtype: bool
    default: true
    info:
      Output MFS movie
  movie-cubes:
    dtype: bool
    default: false
    info:
      Output movie per freq band
  host-address:
    dtype: str
    abbreviation: ha
    info:
      Address where the distributed client lives.
      Uses LocalCluster if no address is provided
      and scheduler is set to distributed.
  nworkers:
    dtype: int
    default: 1
    abbreviation: nw
    info:
      Number of worker processes.
      Use with distributed scheduler.
  nthreads:
    dtype: int
    default: 1
    abbreviation: nt
    info:
      Number of threads.
  # TBD
  field-of-view:
    dtype: float
    abbreviation: fov
    default: 3.0
    info:
      Field of view in degrees
  nx:
    dtype: int
    info:
      Number of x pixels
  ny:
    dtype: int
    info:
      Number of y pixels
  target:
    dtype: str
    info:
      This can be predefined celestial objects known to astropy or a string in
      the format 'HH:MM:SS,DD:MM:SS' (note the , delimiter)
  respect-scan-boundaries:
    dtype: bool
    default: true
    info:
      Whether to allow averaging across scan boundaries
  out-format:
    dtype: str
    default: gif
    choices:
      - gif
      - mp4
    info:
      The format to write movie out in.
      gifs are usually better quality but can get quite large.
      mp4 quality not currently great with streamjoy.
  optimize:
    dtype: bool
    default: false
    info:
      To try and optimize the resulting gif.
      Only possible if gifsicle is installed.
  crf:
    dtype: int
    default: 12
    info:
      Constant rate factor for controlling mp4 output quality.

outputs:
    {}
