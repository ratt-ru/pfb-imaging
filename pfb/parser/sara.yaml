inputs:
  _include:
    - (.)gridding.yml
    - (.)pdopts.yml
    - (.)pmopts.yml
    - (.)cgopts.yml
    - (.)out.yml
  suffix:
    dtype: str
    default: 'main'
    info:
      Can be used to specify a custom name for the image space data products
  bases:
    dtype: str
    info: 'Wavelet bases to use. Give as comma separated str eg. '
    default: 'self,db1,db2,db3'
    abbreviation: bases
  nlevels:
    dtype: int
    info: 'Wavelet decomposition level'
    default: 2
    abbreviation: nlevels
  l1-reweight-from:
    dtype: int
    default: 5
    info:
      L1 reweighting will kick in either at convergence or after this many
      iterations. Set to a negative value to disbale L1 reweighting.
  hess-norm:
    dtype: float
    abbreviation: hess-norm
    info:
      Spectral norm of hessian approximation
  hess-approx:
    dtype: str
    default: 'psf'
    abbreviation: hess-approx
    choices: ['wgt','psf','direct']
    info:
      Which Hessian approximation to use.
      Set to wgt for vis space approximation, psf for zero-padded image
      space approximation and direct for direct inversion.
  rmsfactor:
    dtype: float
    default: 1.0
    info:
      By default will threshold by rmsfactor*rms at every iteration
  eta:
    dtype: float
    default: 1.0
    info:
      Will use eta*wsum to regularise the inversion of the Hessian approximation.
  gamma:
    dtype: float
    default: 1.0
    info:
      Step size of update
  alpha:
    dtype: float
    default: 2
    info:
      Controls how aggressively the l1reweighting is applied.
      Larger values correspond to more agressive reweighting.
  nbasisf:
    dtype: int
    info:
      Number of basis functions to use while fitting the frequency axis.
      Default is to use the number of non-null imaging bands i.e. interpolation.
  positivity:
    dtype: int
    default: 1
    # choices:
    #   - 0
    #   - 1
    #   - 2
    info:
      How to apply positivity constraint
      0 -> no positivity,
      1 -> normal positivity constraint
      2 -> strong positivity i.e. all pixels in a band > 0
  niter:
    dtype: int
    default: 10
    abbreviation: niter
    info:
      Number of iterations.
  nthreads:
    dtype: int
    abbreviation: nt
    info:
      Total number of threads to use.
      Defaults to half the total number available.
  tol:
    dtype: float
    default: 5e-4
    info:
      Tolerance at which to terminate algorithm.
      Will stop when norm(x-xp)/norm(x) < tol
  diverge-count:
    dtype: int
    default: 5
    info:
      Will terminate the algorithm if the rms increases this many times.
      Set to larger than niter to disable this check.
  skip-model:
    dtype: bool
    default: false
    info:
      Skip model creation i.e. use with do-res to do-res only
  rms-outside-model:
    dtype: bool
    default: false
    info:
      Mask residual where model is non-zero when computing rms.
      This is not recommended for largely non-empty fields.
  init_factor:
    dtype: float
    default: 0.5
    info:
      Reduce the regularisation strength by this fraction at the outset.
  verbosity:
    dtype: int
    default: 1
    info:
      Set to larger than 1 to report timings during residual computation

outputs:
  dds-out:
    implicit: '{current.output-filename}_{current.product}_{current.suffix}.dds'
    dtype: Directory
    must_exist: false
  mds-out:
    implicit: '{current.output-filename}_{current.product}_{current.suffix}_model.mds'
    dtype: Directory
    must_exist: false

policies:
  pass_missing_as_none: true
